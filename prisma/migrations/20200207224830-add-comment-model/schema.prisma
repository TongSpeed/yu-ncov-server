datasource db {
  provider = "sqlite"
  url = "***"
  default  = true
}

generator client {
  provider = "prisma-client-js"
}

enum Role {
  USER
  VERIFIED
  ADMIN
}

model User {
  id                  String        @default(cuid()) @id
  email               String        @unique
  name                String?       @unique
  nickname            String        @unique
  password            String
  avatar              Boolean       @default(false)
  role                Role          @default(USER)
  virusRecords        VirusRecord[] @relation(name: "createdByUserWithVirusRecord")
  updatedVirusRecords VirusRecord[] @relation(name: "updateByUserWithVirusRecord")
  publicVirusRecords  VirusRecord[] @relation(name: "publishByUserWithVirusRecord")
  createdAt           DateTime      @default(now())
  updatedAt           DateTime      @updatedAt
}

model Country {
  id       String     @default(cuid()) @id
  title    String     @unique
  continents String
  provinces Province[]
}

model Province {
  id      String  @default(cuid()) @id
  title   String  @unique
  country Country
  cities  City[]
}

model City {
  id       String   @default(cuid()) @id
  title    String   
  province Province
  areas  Area[]
}

model Area {
  id    String @default(cuid()) @id
  title String 
  city  City
}

model VirusInfo {
  id          String @default(cuid()) @id
  title       String @unique
  description String
}
model CountryRecord {
  id             String    @default(cuid()) @id
  country        Country
  virus          VirusInfo
  sourceUrl      String
  suspectedCount Int
  confirmedCount Int
  curedCount     Int
  deadCount      Int
  seriousCount   Int
  suspectedAddCount Int
  confirmedAddCount Int
  curedAddCount     Int
  deadAddCount      Int
  seriousAddCount   Int
  recordAt       DateTime  
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  suspectedCountAdd Int
  confirmedCountAdd Int
  curedCountAdd     Int
  deadCountAdd      Int
  suspectedCountAddRate Int
  confirmedCountAddRate Int
  curedCountAddRate     Int
  deadCountAddRate      Int
}

model ProvinceRecord {
  id             String    @default(cuid()) @id
  country        Country
  province       Province
  virus          VirusInfo
  sourceUrl      String
  suspectedCount Int
  confirmedCount Int
  curedCount     Int
  deadCount      Int

  recordAt       DateTime  
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt


  suspectedCountAddRate Int
  confirmedCountAddRate Int
  curedCountAddRate     Int
  deadCountAddRate      Int
}

model CityRecord {
  id             String    @default(cuid()) @id
  country        Country
  province       Province
  city           City
  virus          VirusInfo
  sourceUrl      String
  suspectedCount Int
  confirmedCount Int
  curedCount     Int
  deadCount      Int
  recordAt       DateTime  
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt

  suspectedCountAddRate Int
  confirmedCountAddRate Int
  curedCountAddRate     Int
  deadCountAddRate      Int
}
model VirusRecord {
  id             String    @default(cuid()) @id
  country        Country
  virus          VirusInfo
  province       Province?
  city           City?
  area           Area?
  sourceUrl      String
  suspectedCount Int?
  confirmedCount Int?
  curedCount     Int?
  deadCount      Int?
  comment        String?
  published      Boolean   @default(false)
  recordAt       DateTime  
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  publishedAt    DateTime?  
  createdBy      User?     @relation(name: "createdByUserWithVirusRecord")
  updatedBy      User?     @relation(name: "updateByUserWithVirusRecord")
  publishedBy    User?     @relation(name: "publishByUserWithVirusRecord")
}